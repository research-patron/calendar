Option Explicit

Public Sub Auto_Open_Setup()
    Dim wsCalendar As Worksheet, wsTaskAdd As Worksheet, wsSubmission As Worksheet
    Dim isNewCalendar As Boolean, isNewTaskAdd As Boolean, isNewSubmission As Boolean

    ' 色変数の初期化
    COLOR_GANTT_BAR = RGB(255, 204, 203)
    COLOR_REMINDER_3DAYS = RGB(144, 238, 144)
    COLOR_REMINDER_2DAYS = RGB(255, 255, 224)
    COLOR_REMINDER_1DAY = RGB(255, 192, 203)
    COLOR_MONTH_HEADER_BG = RGB(211, 211, 211)
    COLOR_FILTER_BUTTON_SELECTED = RGB(173, 216, 230)
    
    gMuniListInitialized = False ' REM ADDED: 初期化フラグを最初にFalseに

    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    Application.EnableEvents = False

    Call InitializeMuniList ' gMuniListInitialized が True になる

    On Error Resume Next
    Set wsCalendar = ThisWorkbook.Sheets(CALENDAR_SHEET_NAME)
    isNewCalendar = (Err.Number <> 0)
    Err.Clear
    Set wsTaskAdd = ThisWorkbook.Sheets(TASK_ADD_SHEET_NAME)
    isNewTaskAdd = (Err.Number <> 0)
    Err.Clear
    Set wsSubmission = ThisWorkbook.Sheets(SUBMISSION_SHEET_NAME)
    isNewSubmission = (Err.Number <> 0)
    Err.Clear
    On Error GoTo 0

    Set wsCalendar = SetupCalendarSheet(isNewCalendar)
    Set wsTaskAdd = SetupTaskAddSheet(isNewTaskAdd)
    Set wsSubmission = SetupSubmissionSheet(isNewSubmission)

    If Not wsCalendar Is Nothing Then
        If gCalendarStartDate = 0 Then gCalendarStartDate = Date
        Call M_Calendar.DrawCalendar
        If isNewCalendar Then
            wsCalendar.Activate
            wsCalendar.Cells(CALENDAR_HEADER_ROWS + 1, "C").Select
        End If
    End If
    
    If gSubmissionViewMode = "" Then gSubmissionViewMode = VIEW_MODE_SINGLE_TASK
    If gCurrentMuniFilterType = "" Then gCurrentMuniFilterType = MUNI_FILTER_TYPE_ALL_ENABLED
    
    If Not wsSubmission Is Nothing Then
        If gMuniListInitialized Then ' REM MODIFIED: フラグ確認
            Call M_Submission.ApplyMuniFilter(wsSubmission, gCurrentMuniFilterType)
        End If
        Call M_Submission.UpdateSubmissionSheetView
    End If

    Application.EnableEvents = True
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True
    
    If isNewCalendar Or isNewTaskAdd Or isNewSubmission Then
        ShowMessage "タスク管理用ガントチャートツールの初期セットアップが完了しました。", "セットアップ完了"
    Else
        ShowMessage "タスク管理用ガントチャートツールを起動しました。", "起動完了"
    End If
End Sub

Private Sub InitializeMuniList()
    Dim numMunicipalities As Integer
    numMunicipalities = 35

    On Error Resume Next ' 配列操作のエラーをハンドルするため
    ReDim gMuniList(1 To numMunicipalities)
    If Err.Number <> 0 Then
        gMuniListInitialized = False
        ShowError "InitializeMuniList: gMuniList の ReDim に失敗しました。" & vbCrLf & Err.Description
        Exit Sub
    End If
    On Error GoTo 0

    gMuniList(1).Code = "201": gMuniList(1).Name = "山形市": gMuniList(1).FilterOut = False
    gMuniList(2).Code = "202": gMuniList(2).Name = "米沢市": gMuniList(2).FilterOut = False
    gMuniList(3).Code = "203": gMuniList(3).Name = "鶴岡市": gMuniList(3).FilterOut = False
    gMuniList(4).Code = "204": gMuniList(4).Name = "酒田市": gMuniList(4).FilterOut = False
    gMuniList(5).Code = "205": gMuniList(5).Name = "新庄市": gMuniList(5).FilterOut = False
    gMuniList(6).Code = "206": gMuniList(6).Name = "寒河江市": gMuniList(6).FilterOut = False
    gMuniList(7).Code = "207": gMuniList(7).Name = "上山市": gMuniList(7).FilterOut = False
    gMuniList(8).Code = "208": gMuniList(8).Name = "村山市": gMuniList(8).FilterOut = False
    gMuniList(9).Code = "209": gMuniList(9).Name = "長井市": gMuniList(9).FilterOut = False
    gMuniList(10).Code = "210": gMuniList(10).Name = "天童市": gMuniList(10).FilterOut = False
    gMuniList(11).Code = "211": gMuniList(11).Name = "東根市": gMuniList(11).FilterOut = False
    gMuniList(12).Code = "213": gMuniList(12).Name = "南陽市": gMuniList(12).FilterOut = False
    gMuniList(13).Code = "301": gMuniList(13).Name = "山辺町": gMuniList(13).FilterOut = False
    gMuniList(14).Code = "302": gMuniList(14).Name = "中山町": gMuniList(14).FilterOut = False
    gMuniList(15).Code = "321": gMuniList(15).Name = "河北町": gMuniList(15).FilterOut = False
    gMuniList(16).Code = "322": gMuniList(16).Name = "西川町": gMuniList(16).FilterOut = False
    gMuniList(17).Code = "324": gMuniList(17).Name = "大江町": gMuniList(17).FilterOut = False
    gMuniList(18).Code = "361": gMuniList(18).Name = "金山町": gMuniList(18).FilterOut = False
    gMuniList(19).Code = "362": gMuniList(19).Name = "最上町": gMuniList(19).FilterOut = False
    gMuniList(20).Code = "363": gMuniList(20).Name = "舟形町": gMuniList(20).FilterOut = False
    gMuniList(21).Code = "364": gMuniList(21).Name = "真室川町": gMuniList(21).FilterOut = False
    gMuniList(22).Code = "365": gMuniList(22).Name = "大蔵村": gMuniList(22).FilterOut = False
    gMuniList(23).Code = "367": gMuniList(23).Name = "戸沢村": gMuniList(23).FilterOut = False
    gMuniList(24).Code = "381": gMuniList(24).Name = "高畠町": gMuniList(24).FilterOut = False
    gMuniList(25).Code = "382": gMuniList(25).Name = "川西町": gMuniList(25).FilterOut = False
    gMuniList(26).Code = "401": gMuniList(26).Name = "小国町": gMuniList(26).FilterOut = False
    gMuniList(27).Code = "402": gMuniList(27).Name = "白鷹町": gMuniList(27).FilterOut = False
    gMuniList(28).Code = "426": gMuniList(28).Name = "三川町": gMuniList(28).FilterOut = False
    gMuniList(29).Code = "428": gMuniList(29).Name = "庄内町": gMuniList(29).FilterOut = False
    gMuniList(30).Code = "461": gMuniList(30).Name = "遊佐町": gMuniList(30).FilterOut = False
    gMuniList(31).Code = "901": gMuniList(31).Name = "尾大環": gMuniList(31).FilterOut = False
    gMuniList(32).Code = "（323）": gMuniList(32).Name = "朝日町": gMuniList(32).FilterOut = False
    gMuniList(33).Code = "（363）": gMuniList(33).Name = "鮭川村": gMuniList(33).FilterOut = False
    gMuniList(34).Code = "（403）": gMuniList(34).Name = "飯豊町": gMuniList(34).FilterOut = False
    gMuniList(35).Code = "": gMuniList(35).Name = "": gMuniList(35).FilterOut = True
    
    ' ReDimとデータ代入が成功した時点でフラグをTrueにする
    gMuniListInitialized = True
    '念のため最終チェック
    On Error Resume Next
    Dim l As Long, u As Long
    l = LBound(gMuniList)
    u = UBound(gMuniList)
    If Err.Number <> 0 Then
        gMuniListInitialized = False
        Debug.Print "InitializeMuniList: LBound/UBound check failed after data assignment."
    ElseIf l > u Then
        gMuniListInitialized = False
        Debug.Print "InitializeMuniList: LBound > UBound after data assignment."
    End If
    On Error GoTo 0
End Sub

Private Function SetupCalendarSheet(isNewSheet As Boolean) As Worksheet
    Dim ws As Worksheet
    Dim i As Long
    Dim headerDataRow As Long
    Dim refreshButtonCell As Range
    Dim shp As Shape
    Dim updateButtonHeight As Double ' 宣言を上部に移動

    headerDataRow = CALENDAR_HEADER_ROWS + 1

    On Error Resume Next
    Set ws = ThisWorkbook.Sheets(CALENDAR_SHEET_NAME)
    If ws Is Nothing Then
        Set ws = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        ws.Name = CALENDAR_SHEET_NAME
    End If
    On Error GoTo 0

    If ws Is Nothing Then Exit Function

    If isNewSheet Then
        With ws
            .Cells.Clear
            Call ClearSheetButtons(ws)
            Call SetDefaultFont(ws)

            .Columns("A").ColumnWidth = 3.5
            .Columns("B").ColumnWidth = 7
            .Columns("C").ColumnWidth = 30
            .Columns("D").ColumnWidth = 12
            .Columns("E").ColumnWidth = 9
            .Columns("F").ColumnWidth = 9
            .Columns("G").ColumnWidth = 10
            .Columns("H").ColumnWidth = 7
            .Columns("I").ColumnWidth = 5
            For i = Columns(GANTT_START_COL_LETTER).Column To Columns("IV").Column
                 .Columns(i).ColumnWidth = 3.5
            Next i
            With .Rows(headerDataRow - 1)
                .Font.Bold = True
                .HorizontalAlignment = xlCenter
                .VerticalAlignment = xlCenter
                .Cells(1, "A").Value = "削除"
                .Cells(1, "B").Value = "リマインド"
                .Cells(1, "C").Value = "調査物名"
                .Cells(1, "D").Value = "担当者名"
                .Cells(1, "E").Value = "県_依頼日"
                .Cells(1, "F").Value = "県_〆切日"
                .Cells(1, "G").Value = "地整_〆切日"
                .Cells(1, "H").Value = "提出状況"
            End With

            With .Range(.Cells(1, GANTT_START_COL_LETTER), .Cells(CALENDAR_HEADER_ROWS, "IV"))
                .HorizontalAlignment = xlCenter
                .VerticalAlignment = xlCenter
                .Font.Bold = True
            End With
            For i = 1 To CALENDAR_HEADER_ROWS
                .Rows(i).RowHeight = 18
            Next i

            ' 更新ボタンの設定
            ' 明示的に1行目と2行目を範囲として指定
            Set refreshButtonCell = .Range(.Cells(1, "I"), .Cells(2, "I"))
            ' セルを結合
            refreshButtonCell.Merge
            refreshButtonCell.VerticalAlignment = xlCenter
            refreshButtonCell.HorizontalAlignment = xlCenter
            ' ボタンの高さを2行分に設定
            updateButtonHeight = .Rows(1).Height + .Rows(2).Height
            Call CreateButton(ws, refreshButtonCell, "更新", "M_Calendar.RefreshCalendar_Click", , updateButtonHeight)
        End With
    Else
        Call SetDefaultFont(ws)
        Dim refreshBtnExists As Boolean
        refreshBtnExists = False
        For Each shp In ws.Shapes
            If shp.Type = msoFormControl And shp.FormControlType = xlButtonControl Then
                If shp.OnAction Like "*M_Calendar.RefreshCalendar_Click*" Then
                    refreshBtnExists = True
                    Exit For
                End If
            End If
        Next shp
        If Not refreshBtnExists Then
            ' 更新ボタンの設定
            ' 明示的に1行目と2行目を範囲として指定
            Set refreshButtonCell = ws.Range(ws.Cells(1, "I"), ws.Cells(2, "I"))
            ' セルを結合
            refreshButtonCell.Merge
            refreshButtonCell.VerticalAlignment = xlCenter
            refreshButtonCell.HorizontalAlignment = xlCenter
            ' ボタンの高さを2行分に設定
            updateButtonHeight = ws.Rows(1).Height + ws.Rows(2).Height
            Call CreateButton(ws, refreshButtonCell, "更新", "M_Calendar.RefreshCalendar_Click", , updateButtonHeight)
        End If

        ' Ensure header labels are present
        With ws.Rows(headerDataRow - 1)
            If Trim(.Cells(1, "A").Value) = "" Then .Cells(1, "A").Value = "削除"
            If Trim(.Cells(1, "B").Value) = "" Then .Cells(1, "B").Value = "リマインド"
            If Trim(.Cells(1, "C").Value) = "" Then .Cells(1, "C").Value = "調査物名"
            If Trim(.Cells(1, "D").Value) = "" Then .Cells(1, "D").Value = "担当者名"
            If Trim(.Cells(1, "E").Value) = "" Then .Cells(1, "E").Value = "県_依頼日"
            If Trim(.Cells(1, "F").Value) = "" Then .Cells(1, "F").Value = "県_〆切日"
            If Trim(.Cells(1, "G").Value) = "" Then .Cells(1, "G").Value = "地整_〆切日"
            If Trim(.Cells(1, "H").Value) = "" Then .Cells(1, "H").Value = "提出状況"
            .Font.Bold = True
            .HorizontalAlignment = xlCenter
            .VerticalAlignment = xlCenter
        End With
    End If
    Set SetupCalendarSheet = ws
End Function

Private Function SetupTaskAddSheet(isNewSheet As Boolean) As Worksheet
    Dim ws As Worksheet
    Dim i As Long
    Dim shp As Shape
    Dim addTaskBtnExists As Boolean

    On Error Resume Next
    Set ws = ThisWorkbook.Sheets(TASK_ADD_SHEET_NAME)
    If ws Is Nothing Then
        Set ws = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        ws.Name = TASK_ADD_SHEET_NAME
    End If
    On Error GoTo 0
    If ws Is Nothing Then Exit Function
    
    If isNewSheet Then
        With ws
            .Cells.Clear
            Call ClearSheetButtons(ws)
            Call SetDefaultFont(ws)
            .Columns("A").ColumnWidth = 15
            .Columns("B").ColumnWidth = 30
            .Columns("C").ColumnWidth = 15
            .Cells(1, "A").Value = "項目"
            .Cells(1, "B").Value = "入力"
            .Cells(1, "C").Value = "参考 / 形式"
            .Rows(1).Font.Bold = True
            .Cells(2, "A").Value = "調査物名"
            .Cells(3, "A").Value = "担当者名"
            .Cells(4, "A").Value = "県_依頼日"
            .Cells(5, "A").Value = "県_〆切日"
            .Cells(6, "A").Value = "地整_〆切日"
            .Cells(4, "C").Value = "(例: m/d)"
            .Cells(5, "C").Value = "(例: m/d)"
            .Cells(6, "C").Value = "(例: m/d または -)"
            For i = 2 To 6
                .Cells(i, "B").Borders(xlEdgeBottom).LineStyle = xlContinuous
                .Cells(i, "B").Borders(xlEdgeBottom).Weight = xlThin
            Next i
            Call CreateButton(ws, .Range("B8:B9"), "タスク追加", "M_TaskAdd.AddTask_Click", , .Range("B8:B9").Height)
        End With
    Else
        Call SetDefaultFont(ws)
        ' Ensure all headers and labels are present even in existing sheet
        With ws
            If Trim(.Cells(1, "A").Value) = "" Then .Cells(1, "A").Value = "項目"
            If Trim(.Cells(1, "B").Value) = "" Then .Cells(1, "B").Value = "入力"
            If Trim(.Cells(1, "C").Value) = "" Then .Cells(1, "C").Value = "参考 / 形式"
            .Rows(1).Font.Bold = True

            If Trim(.Cells(2, "A").Value) = "" Then .Cells(2, "A").Value = "調査物名"
            If Trim(.Cells(3, "A").Value) = "" Then .Cells(3, "A").Value = "担当者名"
            If Trim(.Cells(4, "A").Value) = "" Then .Cells(4, "A").Value = "県_依頼日"
            If Trim(.Cells(5, "A").Value) = "" Then .Cells(5, "A").Value = "県_〆切日"
            If Trim(.Cells(6, "A").Value) = "" Then .Cells(6, "A").Value = "地整_〆切日"

            If Trim(.Cells(4, "C").Value) = "" Then .Cells(4, "C").Value = "(例: m/d)"
            If Trim(.Cells(5, "C").Value) = "" Then .Cells(5, "C").Value = "(例: m/d)"
            If Trim(.Cells(6, "C").Value) = "" Then .Cells(6, "C").Value = "(例: m/d または -)"

            For i = 2 To 6
                If .Cells(i, "B").Borders(xlEdgeBottom).LineStyle = xlNone Then
                    .Cells(i, "B").Borders(xlEdgeBottom).LineStyle = xlContinuous
                    .Cells(i, "B").Borders(xlEdgeBottom).Weight = xlThin
                End If
            Next i
        End With

        addTaskBtnExists = False
        For Each shp In ws.Shapes
             If shp.Type = msoFormControl And shp.FormControlType = xlButtonControl Then
                If shp.OnAction Like "*M_TaskAdd.AddTask_Click*" Then
                    addTaskBtnExists = True
                    Exit For
                End If
            End If
        Next shp
        If Not addTaskBtnExists Then
             Call CreateButton(ws, ws.Range("B8:B9"), "タスク追加", "M_TaskAdd.AddTask_Click", , ws.Range("B8:B9").Height)
        End If
    End If
    Set SetupTaskAddSheet = ws
End Function

Private Function SetupSubmissionSheet(isNewSheet As Boolean) As Worksheet
    Dim ws As Worksheet
    Dim i As Long, muniRow As Long
    Dim btnAllMuni As Button, btnSpecificMuni As Button, btnShowAllTasks As Button
    Dim shp As Shape, btnExists(1 To 3) As Boolean
    
    On Error Resume Next
    Set ws = ThisWorkbook.Sheets(SUBMISSION_SHEET_NAME)
    If ws Is Nothing Then
        Set ws = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        ws.Name = SUBMISSION_SHEET_NAME
    End If
    On Error GoTo 0
    If ws Is Nothing Then Exit Function
    
    If isNewSheet Then
        With ws
            .Cells.Clear
            Call ClearSheetButtons(ws)
            Call SetDefaultFont(ws)
            .Columns("A").Hidden = True
            .Columns("B").ColumnWidth = 12
            .Columns("C").ColumnWidth = 20
            .Columns("D").ColumnWidth = 10
            .Columns("E").ColumnWidth = 10
            
            .Cells(3, "B").Value = "調査物名:"
            .Cells(4, "B").Value = "県_〆切日:"
            .Cells(5, "B").Value = "提出状況 (%):"
            .Cells(6, "B").Value = "未提出市町村:" ' 7行目から6行目に変更
            With .Range(.Cells(3, "C"), .Cells(3, "D"))
                .Merge
                .HorizontalAlignment = xlLeft
            End With
             With .Range(.Cells(4, "C"), .Cells(4, "D"))
                .Merge
                .HorizontalAlignment = xlLeft
            End With
             With .Range(.Cells(5, "C"), .Cells(5, "D"))
                .Merge
                .HorizontalAlignment = xlLeft
            End With
            ' 結合せずに単一のセルで表示
            .Cells(6, "C").WrapText = True
            .Cells(6, "C").VerticalAlignment = xlTop
            .Rows(6).RowHeight = 40

            Set btnShowAllTasks = CreateButton(ws, .Range(.Cells(3, "E"), .Cells(3, "F")), "全タスク", "M_Submission.ShowAllTasksInSubmission_Click", .Columns("E").Width + .Columns("F").Width, , , BTN_NAME_SUBMISSION_SHOW_ALL_TASKS)
            Set btnAllMuni = CreateButton(ws, .Cells(5, "E"), "全市町村（朝飯鮭）", "M_Submission.FilterAllMunicipalities_Click", .Columns("E").Width, , , BTN_NAME_FILTER_ALL)
            Set btnSpecificMuni = CreateButton(ws, .Cells(5, "F"), "市町村", "M_Submission.FilterSpecificMunicipalities_Click", .Columns("F").Width, , , BTN_NAME_FILTER_SPECIFIC)
            ' 更新ボタンも追加
            CreateButton ws, .Range(.Cells(3, "G"), .Cells(3, "G")), "更新", "M_Submission.RefreshSubmissionStatus_Click", .Columns("G").Width

            With .Rows(MUNILIST_HEADER_ROW)
                .Font.Bold = True
                .HorizontalAlignment = xlCenter
                .Cells(1, "B").Value = "市町村コード"
                .Cells(1, "C").Value = "市町村名"
                .Cells(1, "D").Value = "提出日"
                .Cells(1, "E").Value = "提出状況"
            End With
            
            muniRow = MUNILIST_HEADER_ROW + 1
            If gMuniListInitialized Then ' REM MODIFIED: フラグ確認
                For i = LBound(gMuniList) To UBound(gMuniList)
                    ' Always ensure municipality codes and names are set correctly
                    .Cells(muniRow, "B").Value = gMuniList(i).Code
                    .Cells(muniRow, "C").Value = gMuniList(i).Name
                    .Cells(muniRow, "B").Font.Bold = False
                    .Cells(muniRow, "C").Font.Bold = False

                    ' Format the submission date and status cells
                    .Cells(muniRow, "D").NumberFormat = "m/d"
                    .Cells(muniRow, "E").HorizontalAlignment = xlCenter
                    .Cells(muniRow, "E").Value = "×"

                    ' Set row visibility based on FilterOut setting
                    If gMuniList(i).FilterOut Then
                        .Rows(muniRow).Hidden = True
                    Else
                        .Rows(muniRow).Hidden = False
                    End If

                    muniRow = muniRow + 1
                Next i
            End If
            
            If Not btnAllMuni Is Nothing Then Call M_Submission.HighlightFilterButton(ws, btnAllMuni.Name)
            If Not btnSpecificMuni Is Nothing Then Call M_Submission.UnhighlightFilterButton(ws, btnSpecificMuni.Name)
        End With
    Else
        Call SetDefaultFont(ws)

        ' Ensure labels are present in B3-B7
        If Trim(ws.Cells(3, "B").Value) = "" Then ws.Cells(3, "B").Value = "調査物名:"
        If Trim(ws.Cells(4, "B").Value) = "" Then ws.Cells(4, "B").Value = "県_〆切日:"
        If Trim(ws.Cells(5, "B").Value) = "" Then ws.Cells(5, "B").Value = "提出状況 (%):"

        ' Ensure range merges are correct
        On Error Resume Next
        If Not ws.Range(ws.Cells(3, "C"), ws.Cells(3, "D")).MergeCells Then
            ws.Range(ws.Cells(3, "C"), ws.Cells(3, "D")).Merge
            ws.Range(ws.Cells(3, "C"), ws.Cells(3, "D")).HorizontalAlignment = xlLeft
        End If

        If Not ws.Range(ws.Cells(4, "C"), ws.Cells(4, "D")).MergeCells Then
            ws.Range(ws.Cells(4, "C"), ws.Cells(4, "D")).Merge
            ws.Range(ws.Cells(4, "C"), ws.Cells(4, "D")).HorizontalAlignment = xlLeft
        End If

        If Not ws.Range(ws.Cells(5, "C"), ws.Cells(5, "D")).MergeCells Then
            ws.Range(ws.Cells(5, "C"), ws.Cells(5, "D")).Merge
            ws.Range(ws.Cells(5, "C"), ws.Cells(5, "D")).HorizontalAlignment = xlLeft
        End If

        If Not ws.Range(ws.Cells(7, "C"), ws.Cells(7, "E")).MergeCells Then
            ws.Range(ws.Cells(7, "C"), ws.Cells(7, "E")).Merge
            ws.Range(ws.Cells(7, "C"), ws.Cells(7, "E")).WrapText = True
            ws.Range(ws.Cells(7, "C"), ws.Cells(7, "E")).VerticalAlignment = xlTop
        End If
        On Error GoTo 0

        For i = LBound(btnExists) To UBound(btnExists): btnExists(i) = False: Next i
        For Each shp In ws.Shapes
            If shp.Type = msoFormControl And shp.FormControlType = xlButtonControl Then
                If shp.Name = BTN_NAME_SUBMISSION_SHOW_ALL_TASKS Then btnExists(1) = True
                If shp.Name = BTN_NAME_FILTER_ALL Then btnExists(2) = True
                If shp.Name = BTN_NAME_FILTER_SPECIFIC Then btnExists(3) = True
            End If
        Next shp
        If Not btnExists(1) Then CreateButton ws, ws.Range(ws.Cells(3, "E"), ws.Cells(3, "F")), "全タスク", "M_Submission.ShowAllTasksInSubmission_Click", ws.Columns("E").Width + ws.Columns("F").Width, , , BTN_NAME_SUBMISSION_SHOW_ALL_TASKS
        If Not btnExists(2) Then CreateButton ws, ws.Cells(5, "E"), "全市町村", "M_Submission.FilterAllMunicipalities_Click", ws.Columns("E").Width, , , BTN_NAME_FILTER_ALL
        If Not btnExists(3) Then CreateButton ws, ws.Cells(5, "F"), "未提出のみ", "M_Submission.FilterSpecificMunicipalities_Click", ws.Columns("F").Width, , , BTN_NAME_FILTER_SPECIFIC
        
        Dim lastMuniDataRow As Long
        lastMuniDataRow = MUNILIST_HEADER_ROW
        If gMuniListInitialized Then ' REM MODIFIED: フラグ確認
             lastMuniDataRow = MUNILIST_HEADER_ROW + (UBound(gMuniList) - LBound(gMuniList) + 1)
        End If
        
        Dim currentLastRowB As Long
        currentLastRowB = ws.Cells(Rows.Count, "B").End(xlUp).row
        If currentLastRowB < MUNILIST_HEADER_ROW + 1 Then currentLastRowB = MUNILIST_HEADER_ROW ' データ行がない場合

        If currentLastRowB > lastMuniDataRow And lastMuniDataRow > MUNILIST_HEADER_ROW Then ' gMuniListより多い行がある
             ws.Range("B" & (lastMuniDataRow + 1) & ":C" & currentLastRowB).clearContents
        End If
        
        muniRow = MUNILIST_HEADER_ROW + 1
        If gMuniListInitialized Then ' REM MODIFIED: フラグ確認
            ' Always ensure municipality codes and names are set correctly
            For i = LBound(gMuniList) To UBound(gMuniList)
                If muniRow > Rows.Count Then Exit For 'シートの最大行を超えないように
                ' Only update if cells are empty or different from gMuniList values
                If Trim(CStr(ws.Cells(muniRow, "B").Value)) <> gMuniList(i).Code Or _
                   Trim(CStr(ws.Cells(muniRow, "C").Value)) <> gMuniList(i).Name Then
                    ws.Cells(muniRow, "B").Value = gMuniList(i).Code
                    ws.Cells(muniRow, "C").Value = gMuniList(i).Name
                End If

                ' Set row visibility based on FilterOut setting
                If gMuniList(i).FilterOut Then
                    ws.Rows(muniRow).Hidden = True
                Else
                    ws.Rows(muniRow).Hidden = False
                End If

                muniRow = muniRow + 1
            Next i

            ' If there are more rows in the sheet than in the gMuniList array, clear the excess
            If currentLastRowB >= muniRow And currentLastRowB > MUNILIST_HEADER_ROW Then
                ws.Range("B" & muniRow & ":C" & currentLastRowB).clearContents
                ws.Range("B" & muniRow & ":C" & currentLastRowB).EntireRow.Hidden = False
            End If
        End If
        With ws.Rows(MUNILIST_HEADER_ROW)
            If .Cells(1, "B").Value = "" Then .Cells(1, "B").Value = "市町村コード"
            If .Cells(1, "C").Value = "" Then .Cells(1, "C").Value = "市町村名"
            If .Cells(1, "D").Value = "" Then .Cells(1, "D").Value = "提出日"
            If .Cells(1, "E").Value = "" Then .Cells(1, "E").Value = "提出状況"
            .Font.Bold = True
            .Cells(1, "B").HorizontalAlignment = xlCenter
            .Cells(1, "C").HorizontalAlignment = xlCenter
            .Cells(1, "D").HorizontalAlignment = xlCenter
            .Cells(1, "E").HorizontalAlignment = xlCenter
        End With

        ' 行の高さを適切に設定
        ws.Rows(7).RowHeight = 40
    End If
    Set SetupSubmissionSheet = ws
End Function