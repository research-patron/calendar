Option Explicit

Public Sub UpdateSubmissionSheetView()
    Dim wsSubmission As Worksheet
    Dim wsCalendar As Worksheet
    Dim taskRowCal As Long
    Dim taskName As String, keniDeadline As String
    Dim submissionCols As Collection
    Dim i As Long, muniRow As Long
    Dim taskExists As Boolean
    Dim headerRowForTaskName As Long

    headerRowForTaskName = MUNILIST_HEADER_ROW - 2

    Set wsSubmission = GetSheet(SUBMISSION_SHEET_NAME)
    If wsSubmission Is Nothing Then Exit Sub
    Set wsCalendar = GetSheet(CALENDAR_SHEET_NAME)
    
    Application.ScreenUpdating = False
    
    ' 既存のセル結合を解除（どのシート表示状態でも必ず実行）
    On Error Resume Next
    If wsSubmission.Range("C3:D3").MergeCells Then wsSubmission.Range("C3:D3").UnMerge
    If wsSubmission.Range("C4:D4").MergeCells Then wsSubmission.Range("C4:D4").UnMerge
    If wsSubmission.Range("C5:D5").MergeCells Then wsSubmission.Range("C5:D5").UnMerge
    If wsSubmission.Range("C7:E7").MergeCells Then wsSubmission.Range("C7:E7").UnMerge
    Err.Clear
    On Error GoTo 0
    
    ' 必要なセルの初期化
    wsSubmission.Cells(3, "C").Value = ""
    wsSubmission.Cells(4, "C").Value = ""
    wsSubmission.Cells(5, "C").Value = ""
    wsSubmission.Cells(7, "C").Value = ""

    If gSubmissionViewMode = VIEW_MODE_SINGLE_TASK Then
        Call ClearSubmissionSingleTaskView(wsSubmission, False)

        If gSelectedTaskNameForFilter = "" Then
            Application.ScreenUpdating = True
            Exit Sub
        End If

        taskName = gSelectedTaskNameForFilter
        taskExists = False

        If Not wsCalendar Is Nothing Then
            taskRowCal = FindTaskRow(taskName, wsCalendar)
            If taskRowCal > 0 Then
                 If IsDate(wsCalendar.Cells(taskRowCal, "F").Value) Then
                    keniDeadline = Format(CDate(wsCalendar.Cells(taskRowCal, "F").Value), "m/d")
                Else
                    keniDeadline = "-"
                End If
            Else
                keniDeadline = "不明"
            End If
        Else
            keniDeadline = "N/A"
        End If
        
        ' 結合セルでないことを確認
        wsSubmission.Cells(3, "C").Value = taskName
        wsSubmission.Cells(4, "C").Value = keniDeadline

        Set submissionCols = FindTaskSubmissionColumns(taskName, wsSubmission)
        
        If submissionCols Is Nothing Then
             ShowError "「" & taskName & "」の提出状況データ列が提出状況管理シートに見つかりません。" & vbCrLf & _
                       "（シートの " & headerRowForTaskName & " 行目でタスク名「" & taskName & "」が見つかりませんでした）"
             taskExists = False
        ElseIf submissionCols.Count <> 2 Then
             ShowError "調査物「" & taskName & "」の提出状況データ列の数が不正です。"
             taskExists = False
        Else
            taskExists = True
        End If
        
        If taskExists Then
            wsSubmission.Columns("D").Hidden = False
            wsSubmission.Columns("E").Hidden = False
            wsSubmission.Cells(MUNILIST_HEADER_ROW, "D").Value = "提出日"
            wsSubmission.Cells(MUNILIST_HEADER_ROW, "E").Value = "提出状況"

            If gMuniListInitialized Then
                muniRow = MUNILIST_HEADER_ROW + 1
                For i = LBound(gMuniList) To UBound(gMuniList)
                    If muniRow > wsSubmission.Rows.Count Then Exit For
                    If Not wsSubmission.Rows(muniRow).Hidden Then
                        If IsDate(wsSubmission.Cells(muniRow, submissionCols(1)).Value) Then
                            wsSubmission.Cells(muniRow, "D").Value = CDate(wsSubmission.Cells(muniRow, submissionCols(1)).Value)
                            wsSubmission.Cells(muniRow, "D").NumberFormat = "m/d"
                        Else
                            wsSubmission.Cells(muniRow, "D").Value = wsSubmission.Cells(muniRow, submissionCols(1)).Value
                            wsSubmission.Cells(muniRow, "D").NumberFormat = "m/d"
                        End If
                        wsSubmission.Cells(muniRow, "E").Value = wsSubmission.Cells(muniRow, submissionCols(2)).Value
                    End If
                    muniRow = muniRow + 1
                Next i
                Call RecalculateSubmissionSummary(wsSubmission, submissionCols, taskName)
            Else
                Debug.Print "UpdateSubmissionSheetView: gMuniList is not initialized or empty. Skipping muni list processing."
            End If
        Else
            ' タスク列が見つからない場合、D列E列の市町村リスト部分をクリア
            If gMuniListInitialized Then
                muniRow = MUNILIST_HEADER_ROW + 1
                For i = LBound(gMuniList) To UBound(gMuniList)
                    If muniRow > wsSubmission.Rows.Count Then Exit For
                     wsSubmission.Cells(muniRow, "D").clearContents
                     wsSubmission.Cells(muniRow, "E").clearContents
                    muniRow = muniRow + 1
                Next i
            End If
            wsSubmission.Cells(5, "C").Value = "N/A" ' 提出率
            wsSubmission.Cells(7, "C").Value = "タスクデータ列なし" ' 未提出リスト
        End If
        
        ' 個別タスク表示では他のタスク列を隠す
        Call HideAllTaskColumns(wsSubmission)

    ElseIf gSubmissionViewMode = VIEW_MODE_ALL_TASKS Then
        Call ClearSubmissionSingleTaskView(wsSubmission, False)
        
        ' 全タスク表示ではD, E列を非表示にする
        wsSubmission.Columns("D").Hidden = True
        wsSubmission.Columns("E").Hidden = True
        
        If Not wsCalendar Is Nothing Then
            ' タスク列を隠す前に新しく表示するためHideAllTaskColumnsをここでは呼ばない
            Call ShowAllTasksInSubmission_Implementation(wsSubmission, wsCalendar)
        Else
            ShowError "全タスク表示にはカレンダーシートが必要です。"
        End If
    End If
    
    Call UpdateFilterButtonHighlight(wsSubmission)

    Application.ScreenUpdating = True
End Sub

Public Sub ClearSubmissionSingleTaskView(wsSubmission As Worksheet, Optional clearFilterState As Boolean = True)
    If wsSubmission Is Nothing Then Set wsSubmission = GetSheet(SUBMISSION_SHEET_NAME)
    If wsSubmission Is Nothing Then Exit Sub
    
    ' セル結合を解除して、エラーを回避
    On Error Resume Next
    If wsSubmission.Range("C3:D3").MergeCells Then wsSubmission.Range("C3:D3").UnMerge
    If wsSubmission.Range("C4:D4").MergeCells Then wsSubmission.Range("C4:D4").UnMerge
    If wsSubmission.Range("C5:D5").MergeCells Then wsSubmission.Range("C5:D5").UnMerge
    If wsSubmission.Range("C7:E7").MergeCells Then wsSubmission.Range("C7:E7").UnMerge
    
    wsSubmission.Cells(3, "C").clearContents
    If Err.Number <> 0 Then
        Debug.Print "ClearSubmissionSingleTaskView: Error clearing cell (3,C) - " & Err.Description
        Err.Clear
    End If
    
    wsSubmission.Cells(4, "C").clearContents
    wsSubmission.Cells(5, "C").clearContents
    wsSubmission.Cells(7, "C").clearContents
    On Error GoTo 0

    Dim lastMuniRow As Long
    If gMuniListInitialized Then
        lastMuniRow = MUNILIST_HEADER_ROW + UBound(gMuniList) - LBound(gMuniList) + 1
        If lastMuniRow > MUNILIST_HEADER_ROW Then
            wsSubmission.Range("D" & MUNILIST_HEADER_ROW + 1 & ":E" & lastMuniRow).clearContents
        End If
    Else
        Debug.Print "ClearSubmissionSingleTaskView: gMuniList is not initialized. Attempting to clear D:E based on column B."
        Dim safeClearToRow As Long
        safeClearToRow = GetLastDataRow(wsSubmission, "B")
        If safeClearToRow > MUNILIST_HEADER_ROW Then
             wsSubmission.Range("D" & MUNILIST_HEADER_ROW + 1 & ":E" & safeClearToRow).clearContents
        End If
    End If
    
    wsSubmission.Cells(MUNILIST_HEADER_ROW, "D").Value = "提出日"
    wsSubmission.Cells(MUNILIST_HEADER_ROW, "E").Value = "提出状況"

    If clearFilterState Then
        gCurrentMuniFilterType = MUNI_FILTER_TYPE_ALL_ENABLED
        If gMuniListInitialized Then
            Call ApplyMuniFilter(wsSubmission, gCurrentMuniFilterType)
        End If
    End If
End Sub

Public Sub HandleSubmissionDateChange(target As Range)
    Dim wsSubmission As Worksheet
    Dim submissionCols As Collection
    Dim muniRow As Long, i As Long
    Dim muniCode As String, muniListIndex As Long

    If gSubmissionViewMode <> VIEW_MODE_SINGLE_TASK Then Exit Sub
    If gSelectedTaskNameForFilter = "" Then Exit Sub

    Set wsSubmission = target.Worksheet
    
    muniRow = target.row
    If muniRow <= MUNILIST_HEADER_ROW Then Exit Sub

    ' REM MODIFIED: submissionColsの取得とチェックを先に行う
    On Error Resume Next
    Set submissionCols = FindTaskSubmissionColumns(gSelectedTaskNameForFilter, wsSubmission)
    If Err.Number <> 0 Then
        Debug.Print "HandleSubmissionDateChange: Error finding task columns - " & Err.Description
        Err.Clear
        Application.EnableEvents = True
        Application.ScreenUpdating = True
        Exit Sub
    End If
    On Error GoTo 0
    
    If submissionCols Is Nothing Then
        ShowError "HandleSubmissionDateChange: タスク「" & gSelectedTaskNameForFilter & "」のデータ列が提出状況管理シートに見つかりません。"
        Application.EnableEvents = True ' 抜ける前にイベントを有効化
        Application.ScreenUpdating = True
        Exit Sub
    ElseIf submissionCols.Count <> 2 Then
        ShowError "HandleSubmissionDateChange: タスク「" & gSelectedTaskNameForFilter & "」のデータ列の数が不正です。"
        Application.EnableEvents = True
        Application.ScreenUpdating = True
        Exit Sub
    End If

    muniCode = CStr(wsSubmission.Cells(muniRow, "B").Value)
    muniListIndex = -1

    If gMuniListInitialized Then
        For i = LBound(gMuniList) To UBound(gMuniList)
            If gMuniList(i).Code = muniCode Then
                muniListIndex = i
                Exit For
            End If
        Next i
    End If
    If muniListIndex = -1 Then Exit Sub

    Application.EnableEvents = False
    Application.ScreenUpdating = False

    ' D列に入力されたデータを実際のデータ列に反映
    On Error Resume Next
    If IsDate(target.Value) Then
        wsSubmission.Cells(muniRow, "E").Value = "○"
        wsSubmission.Cells(muniRow, submissionCols(1)).Value = CDate(target.Value)
        wsSubmission.Cells(muniRow, submissionCols(1)).NumberFormat = "m/d"
        wsSubmission.Cells(muniRow, submissionCols(2)).Value = "○"
        Debug.Print "提出日を設定: 行=" & muniRow & ", 値=" & CDate(target.Value) & ", 列=" & submissionCols(1)
    Else
        target.clearContents
        wsSubmission.Cells(muniRow, "E").Value = "×"
        wsSubmission.Cells(muniRow, submissionCols(1)).clearContents
        wsSubmission.Cells(muniRow, submissionCols(2)).Value = "×"
        Debug.Print "提出日をクリア: 行=" & muniRow & ", 列=" & submissionCols(1)
    End If
    
    If Err.Number <> 0 Then
        Debug.Print "HandleSubmissionDateChange: データ更新エラー - " & Err.Description
        Err.Clear
    End If
    On Error GoTo 0
    
    wsSubmission.Cells(muniRow, "E").HorizontalAlignment = xlCenter
    Call RecalculateSubmissionSummary(wsSubmission, submissionCols, gSelectedTaskNameForFilter)
    Application.EnableEvents = True
    Application.ScreenUpdating = True
End Sub

' バックアップされたD列の入力値をタスク列に反映する関数を追加
Public Sub SyncDisplayToActualData()
    Dim wsSubmission As Worksheet
    Dim submissionCols As Collection
    Dim i As Long, muniRow As Long
    
    If gSubmissionViewMode <> VIEW_MODE_SINGLE_TASK Then Exit Sub
    If gSelectedTaskNameForFilter = "" Then Exit Sub
    
    Set wsSubmission = GetSheet(SUBMISSION_SHEET_NAME)
    If wsSubmission Is Nothing Then Exit Sub
    
    On Error Resume Next
    Debug.Print "SyncDisplayToActualData: タスク「" & gSelectedTaskNameForFilter & "」のデータを同期します"
    Set submissionCols = FindTaskSubmissionColumns(gSelectedTaskNameForFilter, wsSubmission)
    
    ' submissionColsがNothingでないことを確認
    If submissionCols Is Nothing Then
        Debug.Print "SyncDisplayToActualData: submissionCols is Nothing"
        On Error GoTo 0
        Exit Sub
    End If
    
    ' submissionColsがCollectionかつCountが2であることを確認
    Dim colCount As Long
    colCount = 0
    On Error Resume Next
    colCount = submissionCols.Count
    If Err.Number <> 0 Then
        Debug.Print "SyncDisplayToActualData: Error accessing submissionCols.Count - " & Err.Description
        Err.Clear
        On Error GoTo 0
        Exit Sub
    End If
    On Error GoTo 0
    
    If colCount <> 2 Then
        Debug.Print "SyncDisplayToActualData: submissionCols.Count is not 2"
        Exit Sub
    End If
    
    Debug.Print "SyncDisplayToActualData: 提出データ列を検出 - 提出日列=" & submissionCols(1) & ", 状況列=" & submissionCols(2)
    
    If gMuniListInitialized Then
        muniRow = MUNILIST_HEADER_ROW + 1
        For i = LBound(gMuniList) To UBound(gMuniList)
            If muniRow > wsSubmission.Rows.Count Then Exit For
            
            On Error Resume Next
            ' D列からタスク列への同期
            If IsDate(wsSubmission.Cells(muniRow, "D").Value) Then
                wsSubmission.Cells(muniRow, submissionCols(1)).Value = CDate(wsSubmission.Cells(muniRow, "D").Value)
                wsSubmission.Cells(muniRow, submissionCols(1)).NumberFormat = "m/d"
                wsSubmission.Cells(muniRow, submissionCols(2)).Value = "○"
                Debug.Print "行 " & muniRow & " の提出日を同期: " & CDate(wsSubmission.Cells(muniRow, "D").Value)
            Else
                If Trim(CStr(wsSubmission.Cells(muniRow, "D").Value)) = "" Then
                    wsSubmission.Cells(muniRow, submissionCols(1)).clearContents
                    wsSubmission.Cells(muniRow, submissionCols(2)).Value = "×"
                    Debug.Print "行 " & muniRow & " の提出日をクリア"
                End If
            End If
            
            If Err.Number <> 0 Then
                Debug.Print "SyncDisplayToActualData: Error at row " & muniRow & " - " & Err.Description
                Err.Clear
            End If
            On Error GoTo 0
            
            muniRow = muniRow + 1
        Next i
    End If
End Sub

Public Sub RecalculateSubmissionSummary(wsSubmission As Worksheet, taskSubmissionCols As Collection, targetTaskName As String)
    Dim i As Long, muniRow As Long
    Dim totalMuniCount As Long, submittedMuniCount As Long
    Dim unsubmittedList As String
    Dim submissionStatusColActual As Long

    If wsSubmission Is Nothing Then Exit Sub
    If Trim(targetTaskName) = "" Then Exit Sub
    
    If taskSubmissionCols Is Nothing Then
        Debug.Print "RecalculateSubmissionSummary: Invalid taskSubmissionCols (Nothing) for task " & targetTaskName
        wsSubmission.Cells(5, "C").Value = "エラー"
        wsSubmission.Cells(7, "C").Value = "データ列エラー(1)"
        Exit Sub
    ElseIf taskSubmissionCols.Count <> 2 Then
        Debug.Print "RecalculateSubmissionSummary: Invalid taskSubmissionCols count for task " & targetTaskName
        wsSubmission.Cells(5, "C").Value = "エラー"
        wsSubmission.Cells(7, "C").Value = "データ列エラー(2)"
        Exit Sub
    Else
         submissionStatusColActual = taskSubmissionCols(2)
    End If

    totalMuniCount = 0
    submittedMuniCount = 0
    unsubmittedList = ""
    
    If gMuniListInitialized Then
        muniRow = MUNILIST_HEADER_ROW + 1
        For i = LBound(gMuniList) To UBound(gMuniList)
            If muniRow > wsSubmission.Rows.Count Then Exit For
            If Not wsSubmission.Rows(muniRow).Hidden And Not gMuniList(i).FilterOut Then
                totalMuniCount = totalMuniCount + 1
                If wsSubmission.Cells(muniRow, submissionStatusColActual).Value = "○" Then
                    submittedMuniCount = submittedMuniCount + 1
                Else
                    If unsubmittedList <> "" Then unsubmittedList = unsubmittedList & ", "
                    unsubmittedList = unsubmittedList & gMuniList(i).Name
                End If
            End If
            muniRow = muniRow + 1
        Next i
    Else
        Debug.Print "RecalculateSubmissionSummary: gMuniList not initialized."
    End If

    If totalMuniCount > 0 Then
        wsSubmission.Cells(5, "C").Value = Round((submittedMuniCount / totalMuniCount) * 100, 1) & "%"
    Else
        wsSubmission.Cells(5, "C").Value = "N/A"
    End If
    wsSubmission.Cells(7, "C").Value = unsubmittedList
End Sub

Public Sub FilterAllMunicipalities_Click()
    Dim wsSubmission As Worksheet
    Set wsSubmission = GetSheet(SUBMISSION_SHEET_NAME)
    If wsSubmission Is Nothing Then Exit Sub

    gCurrentMuniFilterType = MUNI_FILTER_TYPE_ALL_ENABLED
    If gMuniListInitialized Then Call ApplyMuniFilter(wsSubmission, gCurrentMuniFilterType)
    Call UpdateSubmissionSheetView
End Sub

Public Sub FilterSpecificMunicipalities_Click()
    Dim wsSubmission As Worksheet
    Set wsSubmission = GetSheet(SUBMISSION_SHEET_NAME)
    If wsSubmission Is Nothing Then Exit Sub

    gCurrentMuniFilterType = MUNI_FILTER_TYPE_UNSUBMITTED
    If gMuniListInitialized Then Call ApplyMuniFilter(wsSubmission, gCurrentMuniFilterType)
    Call UpdateSubmissionSheetView
End Sub

Public Sub ApplyMuniFilter(wsSubmission As Worksheet, filterType As String)
    Dim i As Long, muniRow As Long
    Dim taskSubmissionCols As Collection
    Dim statusColForFilterActual As Long

    If wsSubmission Is Nothing Then Exit Sub
    If Not gMuniListInitialized Then
        ShowError "市町村リストが初期化されていません。フィルターを実行できません。"
        Exit Sub
    End If
    
    Application.ScreenUpdating = False

    muniRow = MUNILIST_HEADER_ROW + 1
    
    ' エラー91が発生する箇所の修正
    statusColForFilterActual = wsSubmission.Columns("E").Column ' デフォルト値
    
    If gSubmissionViewMode = VIEW_MODE_SINGLE_TASK And gSelectedTaskNameForFilter <> "" Then
        On Error Resume Next
        Set taskSubmissionCols = FindTaskSubmissionColumns(gSelectedTaskNameForFilter, wsSubmission)
        If Err.Number <> 0 Then
            Debug.Print "ApplyMuniFilter: Error finding task columns - " & Err.Description
            Err.Clear
            Set taskSubmissionCols = Nothing  ' オブジェクト変数はSetを使用
        End If
        On Error GoTo 0
        
        ' ここでNothingかどうかだけでなく、Count=2になっているかも明示的にチェック
        If Not taskSubmissionCols Is Nothing Then
            On Error Resume Next
            Dim colCount As Long
            colCount = taskSubmissionCols.Count
            If Err.Number <> 0 Then
                Debug.Print "ApplyMuniFilter: Error accessing taskSubmissionCols.Count - " & Err.Description
                Err.Clear
                colCount = 0
            End If
            On Error GoTo 0
            
            If colCount = 2 Then
                statusColForFilterActual = taskSubmissionCols(2)
            Else
                ShowError "未提出フィルター: 選択中タスク「" & gSelectedTaskNameForFilter & "」のデータ列数が不正です。全市町村を表示します。"
                gCurrentMuniFilterType = MUNI_FILTER_TYPE_ALL_ENABLED
                filterType = MUNI_FILTER_TYPE_ALL_ENABLED
            End If
        Else
            ShowError "未提出フィルター: 選択中タスク「" & gSelectedTaskNameForFilter & "」のデータ列が見つかりません。全市町村を表示します。"
            gCurrentMuniFilterType = MUNI_FILTER_TYPE_ALL_ENABLED
            filterType = MUNI_FILTER_TYPE_ALL_ENABLED
        End If
    Else
        If filterType = MUNI_FILTER_TYPE_UNSUBMITTED Then
            ShowError "未提出フィルターは単一タスク表示時のみ有効です。全市町村を表示します。"
            gCurrentMuniFilterType = MUNI_FILTER_TYPE_ALL_ENABLED
            filterType = MUNI_FILTER_TYPE_ALL_ENABLED
        End If
    End If

    For i = LBound(gMuniList) To UBound(gMuniList)
        If muniRow > wsSubmission.Rows.Count Then Exit For
        If gMuniList(i).FilterOut Then
            wsSubmission.Rows(muniRow).Hidden = True
        Else
            Select Case filterType
                Case MUNI_FILTER_TYPE_ALL_ENABLED
                    wsSubmission.Rows(muniRow).Hidden = False
                Case MUNI_FILTER_TYPE_UNSUBMITTED
                    ' さらにエラー防止のため、taskSubmissionColsの有効性をここでも再確認
                    If gSubmissionViewMode = VIEW_MODE_SINGLE_TASK And gSelectedTaskNameForFilter <> "" Then
                        If Not taskSubmissionCols Is Nothing Then
                            On Error Resume Next
                            Dim colCount2 As Long
                            colCount2 = taskSubmissionCols.Count
                            If Err.Number <> 0 Then
                                Debug.Print "ApplyMuniFilter: Second error accessing taskSubmissionCols.Count - " & Err.Description
                                Err.Clear
                                colCount2 = 0
                            End If
                            On Error GoTo 0
                            
                            If colCount2 = 2 Then
                                On Error Resume Next
                                If wsSubmission.Cells(muniRow, statusColForFilterActual).Value <> "○" Then
                                    wsSubmission.Rows(muniRow).Hidden = False
                                Else
                                    wsSubmission.Rows(muniRow).Hidden = True
                                End If
                                If Err.Number <> 0 Then
                                    Debug.Print "ApplyMuniFilter: Error checking status value - " & Err.Description
                                    Err.Clear
                                    wsSubmission.Rows(muniRow).Hidden = False
                                End If
                                On Error GoTo 0
                            Else
                                wsSubmission.Rows(muniRow).Hidden = False
                            End If
                        Else
                            wsSubmission.Rows(muniRow).Hidden = False
                        End If
                    Else
                        wsSubmission.Rows(muniRow).Hidden = False
                    End If
                Case Else
                    wsSubmission.Rows(muniRow).Hidden = False
            End Select
        End If
        muniRow = muniRow + 1
    Next i
    Application.ScreenUpdating = True
End Sub

Public Sub HighlightFilterButton(sht As Worksheet, buttonName As String)
    Dim btnShape As Shape
    Dim btn As Button
    
    On Error Resume Next
    Set btnShape = sht.Shapes(buttonName)
    If btnShape Is Nothing Then
        ' 通常のボタンオブジェクトを試す
        Set btn = sht.Buttons(buttonName)
        If btn Is Nothing Then
            Debug.Print "HighlightFilterButton: Button '" & buttonName & "' not found on sheet '" & sht.Name & "'."
            Exit Sub
        Else
            ' ボタンオブジェクトのハイライト (背景色変更はサポートされていないのでフォントを変更)
            btn.Font.Bold = True
            btn.Font.Color = RGB(0, 0, 255) ' 青色のフォント
        End If
    Else
        ' Shapeオブジェクトの場合は背景色を変更
        On Error Resume Next
        btnShape.Fill.Visible = msoTrue
        btnShape.Fill.ForeColor.RGB = COLOR_FILTER_BUTTON_SELECTED
        If Err.Number <> 0 Then
            ' Fill.ForeColorがサポートされていない場合
            btnShape.TextFrame.Characters.Font.Bold = True
            btnShape.TextFrame.Characters.Font.Color = RGB(0, 0, 255)
            Err.Clear
        End If
        btnShape.Line.Visible = msoTrue
        btnShape.Line.ForeColor.RGB = RGB(0, 0, 0)
        btnShape.Line.Weight = 1.5
        On Error GoTo 0
    End If
    On Error GoTo 0
End Sub

Public Sub UnhighlightFilterButton(sht As Worksheet, buttonName As String)
    Dim btnShape As Shape
    Dim btn As Button
    
    On Error Resume Next
    Set btnShape = sht.Shapes(buttonName)
    If btnShape Is Nothing Then
        ' 通常のボタンオブジェクトを試す
        Set btn = sht.Buttons(buttonName)
        If btn Is Nothing Then
            Debug.Print "UnhighlightFilterButton: Button '" & buttonName & "' not found on sheet '" & sht.Name & "'."
            Exit Sub
        Else
            ' ボタンオブジェクトの非ハイライト
            btn.Font.Bold = False
            btn.Font.Color = RGB(0, 0, 0) ' 黒色のフォント
        End If
    Else
        ' Shapeオブジェクトの場合は背景色を変更
        On Error Resume Next
        btnShape.Fill.Visible = msoFalse
        btnShape.Line.Visible = msoTrue
        btnShape.Line.ForeColor.RGB = RGB(128, 128, 128)
        btnShape.Line.Weight = 0.75
        On Error GoTo 0
    End If
    On Error GoTo 0
End Sub

Public Sub ShowAllTasksInSubmission_Click()
    Dim wsSubmission As Worksheet
    Set wsSubmission = GetSheet(SUBMISSION_SHEET_NAME)
    If wsSubmission Is Nothing Then Exit Sub

    ' 表示モード切替え前にD列の変更内容を実際のデータ列に同期
    If gSubmissionViewMode = VIEW_MODE_SINGLE_TASK And gSelectedTaskNameForFilter <> "" Then
        On Error Resume Next
        Call SyncDisplayToActualData
        If Err.Number <> 0 Then
            Debug.Print "ShowAllTasksInSubmission_Click: Error in SyncDisplayToActualData - " & Err.Description
            Err.Clear
        End If
        On Error GoTo 0
    End If

    gSubmissionViewMode = VIEW_MODE_ALL_TASKS
    gSelectedTaskNameForFilter = ""
    
    gCurrentMuniFilterType = MUNI_FILTER_TYPE_ALL_ENABLED
    If gMuniListInitialized Then Call ApplyMuniFilter(wsSubmission, gCurrentMuniFilterType)
    
    Call UpdateSubmissionSheetView
End Sub

Public Sub ShowAllTasksInSubmission_Implementation(wsSubmission As Worksheet, wsCalendar As Worksheet)
    Dim lastCalTaskRow As Long, calRow As Long
    Dim taskName As String
    Dim submissionCols As Collection
    Dim nextDisplayCol As Long
    Dim i As Long, muniRow As Long
    Dim dataStartRowCal As Long
    Dim headerRowForTaskName As Long
    Dim currentDisplayCount As Long
    
    headerRowForTaskName = MUNILIST_HEADER_ROW - 2
    dataStartRowCal = CALENDAR_HEADER_ROWS + 1
    
    ' 全タスク表示の前に既存のタスク列をクリア
    Call HideAllTaskColumns(wsSubmission)
    
    nextDisplayCol = Columns("F").Column
    currentDisplayCount = 0

    If wsCalendar Is Nothing Then
        ShowError "カレンダーシートが見つかりません。全タスクを表示できません。"
        Exit Sub
    End If
    lastCalTaskRow = GetLastDataRow(wsCalendar, "C")
    If lastCalTaskRow < dataStartRowCal Then Exit Sub

    If Not gMuniListInitialized Then
        ShowError "市町村リストが初期化されていません。全タスクを表示できません。"
        Exit Sub
    End If

    ' まず直接シートにタスク列のヘッダーを書き込む
    Dim isFirstEntry As Boolean
    isFirstEntry = True

    For calRow = dataStartRowCal To lastCalTaskRow
        taskName = Trim(CStr(wsCalendar.Cells(calRow, "C").Value))
        
        ' タスク名がある場合のみ処理
        If taskName <> "" Then
            If nextDisplayCol > Columns("IV").Column - 1 Then Exit For
            
            ' まずF列から2列ずつヘッダーだけを作成
            wsSubmission.Cells(headerRowForTaskName, nextDisplayCol).Value = taskName
            wsSubmission.Cells(MUNILIST_HEADER_ROW, nextDisplayCol).Value = "提出日"
            wsSubmission.Cells(MUNILIST_HEADER_ROW, nextDisplayCol + 1).Value = "状況"
            
            With wsSubmission.Range(wsSubmission.Cells(MUNILIST_HEADER_ROW, nextDisplayCol), wsSubmission.Cells(MUNILIST_HEADER_ROW, nextDisplayCol + 1))
                .HorizontalAlignment = xlCenter
                .Font.Bold = True
            End With
            
            ' この段階で列を表示
            wsSubmission.Columns(nextDisplayCol).Hidden = False
            wsSubmission.Columns(nextDisplayCol + 1).Hidden = False
            wsSubmission.Columns(nextDisplayCol).ColumnWidth = 10
            wsSubmission.Columns(nextDisplayCol + 1).ColumnWidth = 10
            
            nextDisplayCol = nextDisplayCol + 2
            currentDisplayCount = currentDisplayCount + 1
            
            ' 最初のタスクの場合、関数が終了するまでTaskNameを保持
            If isFirstEntry Then
                wsSubmission.Cells(1, "A").Value = taskName
                isFirstEntry = False
            End If
        End If
    Next calRow
    
    ' タスクが1つも見つからなかった場合
    If currentDisplayCount = 0 Then
        ShowError "表示するタスクが見つかりません。"
        Exit Sub
    End If
    
    ' ヘッダーを作成した後、各タスクのデータを設定
    nextDisplayCol = Columns("F").Column
    
    For calRow = dataStartRowCal To lastCalTaskRow
        taskName = Trim(CStr(wsCalendar.Cells(calRow, "C").Value))
        If taskName <> "" Then
            If nextDisplayCol > Columns("IV").Column - 1 Then Exit For
            
            On Error Resume Next
            wsSubmission.Cells(1, "A").Value = taskName ' タスク名を一時的にA1セルに保存して検索用に使用
            Set submissionCols = FindTaskSubmissionColumns(taskName, wsSubmission)
            If Err.Number <> 0 Then
                Debug.Print "ShowAllTasksInSubmission_Implementation: Error finding task columns for " & taskName & " - " & Err.Description
                Err.Clear
                Set submissionCols = Nothing  ' オブジェクト変数はSetを使用して初期化
            End If
            On Error GoTo 0
            
            ' こちらもエラー91防止の修正
            If Not submissionCols Is Nothing Then
                On Error Resume Next
                Dim colCount As Long
                colCount = submissionCols.Count
                If Err.Number <> 0 Then
                    Debug.Print "ShowAllTasksInSubmission_Implementation: Error accessing submissionCols.Count - " & Err.Description
                    Err.Clear
                    colCount = 0
                End If
                On Error GoTo 0
                
                If colCount = 2 Then
                    ' タスクデータが見つかったら各市町村行にデータを設定
                    muniRow = MUNILIST_HEADER_ROW + 1
                    For i = LBound(gMuniList) To UBound(gMuniList)
                        If muniRow > wsSubmission.Rows.Count Then Exit For
                        
                        On Error Resume Next
                        If IsDate(wsSubmission.Cells(muniRow, submissionCols(1)).Value) Then
                            wsSubmission.Cells(muniRow, nextDisplayCol).Value = CDate(wsSubmission.Cells(muniRow, submissionCols(1)).Value)
                            wsSubmission.Cells(muniRow, nextDisplayCol).NumberFormat = "m/d"
                        Else
                            wsSubmission.Cells(muniRow, nextDisplayCol).Value = ""
                        End If
                        wsSubmission.Cells(muniRow, nextDisplayCol + 1).Value = wsSubmission.Cells(muniRow, submissionCols(2)).Value
                        wsSubmission.Cells(muniRow, nextDisplayCol + 1).HorizontalAlignment = xlCenter
                        If Err.Number <> 0 Then
                            Debug.Print "ShowAllTasksInSubmission_Implementation: Error setting data for row " & muniRow & " - " & Err.Description
                            Err.Clear
                        End If
                        On Error GoTo 0
                        
                        muniRow = muniRow + 1
                    Next i
                    
                    Debug.Print "タスク '" & taskName & "' の提出状況を列 " & nextDisplayCol & " に表示しました"
                Else
                    Debug.Print "ShowAllTasksInSubmission_Implementation: Submission columns for task '" & taskName & "' found but count is not 2."
                End If
            Else
                Debug.Print "ShowAllTasksInSubmission_Implementation: Submission columns for task '" & taskName & "' not found. Skipping."
            End If
            
            nextDisplayCol = nextDisplayCol + 2
        End If
    Next calRow
    
    ' 一時的に保存したタスク名をクリア
    wsSubmission.Cells(1, "A").clearContents
End Sub

Private Sub HideAllTaskColumns(wsSubmission As Worksheet)
    Dim c As Long
    Dim headerRowForTaskName As Long
    headerRowForTaskName = MUNILIST_HEADER_ROW - 2
    
    If wsSubmission Is Nothing Then Exit Sub

    On Error Resume Next
    For c = Columns("F").Column To Columns("IV").Column
        wsSubmission.Columns(c).Hidden = True
        wsSubmission.Cells(headerRowForTaskName, c).clearContents
        wsSubmission.Cells(MUNILIST_HEADER_ROW, c).clearContents
        
        Dim lastMuniDataRow As Long
        lastMuniDataRow = GetLastDataRow(wsSubmission, "B")
        If lastMuniDataRow < MUNILIST_HEADER_ROW + 1 And gMuniListInitialized Then
            lastMuniDataRow = MUNILIST_HEADER_ROW + UBound(gMuniList) - LBound(gMuniList)
        End If
        If lastMuniDataRow > MUNILIST_HEADER_ROW Then
            wsSubmission.Range(wsSubmission.Cells(MUNILIST_HEADER_ROW + 1, c), wsSubmission.Cells(lastMuniDataRow, c)).clearContents
        End If
    Next c
    On Error GoTo 0
End Sub

Private Sub UpdateFilterButtonHighlight(wsSubmission As Worksheet)
    If wsSubmission Is Nothing Then Exit Sub
    
    If gCurrentMuniFilterType = MUNI_FILTER_TYPE_ALL_ENABLED Then
        Call HighlightFilterButton(wsSubmission, BTN_NAME_FILTER_ALL)
        Call UnhighlightFilterButton(wsSubmission, BTN_NAME_FILTER_SPECIFIC)
    ElseIf gCurrentMuniFilterType = MUNI_FILTER_TYPE_UNSUBMITTED Then
        Call UnhighlightFilterButton(wsSubmission, BTN_NAME_FILTER_ALL)
        Call HighlightFilterButton(wsSubmission, BTN_NAME_FILTER_SPECIFIC)
    Else
        Call UnhighlightFilterButton(wsSubmission, BTN_NAME_FILTER_ALL)
        Call UnhighlightFilterButton(wsSubmission, BTN_NAME_FILTER_SPECIFIC)
    End If
End Sub

Public Sub DeleteTaskSubmissionColumns(wsSubmission As Worksheet, taskName As String)
    Dim submissionCols As Collection
    Dim headerRowForTaskName As Long
    
    headerRowForTaskName = MUNILIST_HEADER_ROW - 2

    If wsSubmission Is Nothing Or Trim(taskName) = "" Then Exit Sub

    On Error Resume Next
    Set submissionCols = FindTaskSubmissionColumns(taskName, wsSubmission)
    If Err.Number <> 0 Then
        Debug.Print "DeleteTaskSubmissionColumns: Error finding task columns - " & Err.Description
        Err.Clear
        Set submissionCols = Nothing
    End If
    On Error GoTo 0

    ' こちらもエラー91防止の修正
    If submissionCols Is Nothing Then
        Debug.Print "DeleteTaskSubmissionColumns: Task '" & taskName & "' columns not found to delete."
        Exit Sub
    End If
    
    On Error Resume Next
    Dim colCount As Long
    colCount = submissionCols.Count
    If Err.Number <> 0 Then
        Debug.Print "DeleteTaskSubmissionColumns: Error accessing submissionCols.Count - " & Err.Description
        Err.Clear
        Exit Sub
    End If
    On Error GoTo 0
    
    If colCount = 2 Then
        On Error Resume Next
        wsSubmission.Cells(headerRowForTaskName, submissionCols(1)).clearContents
        
        wsSubmission.Cells(MUNILIST_HEADER_ROW, submissionCols(1)).clearContents
        wsSubmission.Cells(MUNILIST_HEADER_ROW, submissionCols(2)).clearContents
        
        Dim lastMuniDataRow As Long
        lastMuniDataRow = GetLastDataRow(wsSubmission, "B")
         If lastMuniDataRow < MUNILIST_HEADER_ROW + 1 And gMuniListInitialized Then
            lastMuniDataRow = MUNILIST_HEADER_ROW + UBound(gMuniList) - LBound(gMuniList)
        End If

        If lastMuniDataRow >= MUNILIST_HEADER_ROW + 1 Then
            wsSubmission.Range(wsSubmission.Cells(MUNILIST_HEADER_ROW + 1, submissionCols(1)), wsSubmission.Cells(lastMuniDataRow, submissionCols(2))).clearContents
        End If
        
        If Err.Number <> 0 Then
            Debug.Print "DeleteTaskSubmissionColumns: Error clearing content - " & Err.Description
            Err.Clear
        End If
        On Error GoTo 0
        
        Debug.Print "Submission columns for task '" & taskName & "' cleared."
    Else
         Debug.Print "DeleteTaskSubmissionColumns: Task '" & taskName & "' columns found, but count is not 2. Count: " & colCount
    End If
End Sub

